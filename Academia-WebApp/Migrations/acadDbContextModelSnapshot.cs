// <auto-generated />
using System;
using Academia_WebApp.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcademiaWebApp.Migrations
{
    [DbContext(typeof(acadDbContext))]
    partial class acadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Academia_WebApp.Models.ClienteModel", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Plano")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Academia_WebApp.Models.ExercicioModel", b =>
                {
                    b.Property<int>("ExercicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExercicioId"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Equipamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MusculoAlvo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ExercicioId");

                    b.ToTable("Exercicio");
                });

            modelBuilder.Entity("Academia_WebApp.Models.TreinoPersonalizadoExercicioModel", b =>
                {
                    b.Property<int>("TreinoPersonalizadoExercicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TreinoPersonalizadoExercicioId"));

                    b.Property<int>("Carga")
                        .HasColumnType("int");

                    b.Property<int>("ExercicioId")
                        .HasColumnType("int");

                    b.Property<int?>("ExercicioModelExercicioId")
                        .HasColumnType("int");

                    b.Property<int>("Repeticoes")
                        .HasColumnType("int");

                    b.Property<int>("Series")
                        .HasColumnType("int");

                    b.Property<int>("TreinoPersonalizadoId")
                        .HasColumnType("int");

                    b.Property<int?>("TreinoPersonalizadoModelTreinoPersonalizadoId")
                        .HasColumnType("int");

                    b.HasKey("TreinoPersonalizadoExercicioId");

                    b.HasIndex("ExercicioModelExercicioId");

                    b.HasIndex("TreinoPersonalizadoModelTreinoPersonalizadoId");

                    b.ToTable("TreinoPersonalizadoExercicio");
                });

            modelBuilder.Entity("Academia_WebApp.Models.TreinoPersonalizadoModel", b =>
                {
                    b.Property<int>("TreinoPersonalizadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TreinoPersonalizadoId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TreinoPersonalizadoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("TreinoPersonalizado");
                });

            modelBuilder.Entity("Academia_WebApp.Models.TreinoPersonalizadoExercicioModel", b =>
                {
                    b.HasOne("Academia_WebApp.Models.ExercicioModel", null)
                        .WithMany("TreinosPersonalizadosExercicios")
                        .HasForeignKey("ExercicioModelExercicioId");

                    b.HasOne("Academia_WebApp.Models.TreinoPersonalizadoModel", null)
                        .WithMany("TreinosPersonalizadosExercicios")
                        .HasForeignKey("TreinoPersonalizadoModelTreinoPersonalizadoId");
                });

            modelBuilder.Entity("Academia_WebApp.Models.TreinoPersonalizadoModel", b =>
                {
                    b.HasOne("Academia_WebApp.Models.ClienteModel", "Cliente")
                        .WithMany("TreinosPersonalizados")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Academia_WebApp.Models.ClienteModel", b =>
                {
                    b.Navigation("TreinosPersonalizados");
                });

            modelBuilder.Entity("Academia_WebApp.Models.ExercicioModel", b =>
                {
                    b.Navigation("TreinosPersonalizadosExercicios");
                });

            modelBuilder.Entity("Academia_WebApp.Models.TreinoPersonalizadoModel", b =>
                {
                    b.Navigation("TreinosPersonalizadosExercicios");
                });
#pragma warning restore 612, 618
        }
    }
}
